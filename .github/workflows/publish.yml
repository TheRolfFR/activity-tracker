name: "publish"
on:
  push:
    paths:
      - 'src-tauri/tauri.conf.json'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./src-tauri/tauri.conf.json').package.version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `Activity tracker v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              make_latest: 'true',
              prerelease: false
            })
            
            return data.id
  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install app dependencies and build it
      run: npm i -D && npm run build
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "Activity tracker v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: false
        prerelease: false